
// 'Screen' system VNJS

const client = require('client');
const { copyObject, debug } = require('lang');

// Creates and returns a generic client side element.

function element(style) {

    let client_ele_id = null;



    function pushToClient() {
        if (client_ele_id === null) {
            client_ele_id = client.createUniqueElementId();
            client.pushElement(client_ele_id, style);
        }
    }

    // If the element is added to the screen or not,

    function isAdded() {
        return (client_ele_id !== null);
    }

    // Transitions a style for this element.

    function animate(next_style, time, transform) {

        const is_added = isAdded();

        if (is_added) {

            // Send the animation command to the client element,
            client.sendToElement(client_ele_id, 'animate', next_style, time, transform);

            // Immediately update the current element style with the changes.
            copyObject(next_style, style);

        }

        return is_added;

    }

    // Returns the style.

    function getStyle() {
        return copyObject(style, {});
    }


    // Exported 'element' API,
    return {
        pushToClient,
        isAdded,
        animate,
        getStyle,
    };

}


function checkeredElement(style) {
    return element({
        class: 'std/checkeredElement',
        name: style.name,
        layer: style.layer,
        width: style.width,
        height: style.height,
        pattern_width: style.pattern_width,
        pattern_height: style.pattern_height,
        pattern_color1: style.pattern_color1,
        pattern_color2: style.pattern_color2,
    });
}


function addElement(ele) {
    ele.pushToClient();
}
