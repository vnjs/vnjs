
/* global screen, constants, wait */




function test() {
    const a = 'message';
    return "This is a " + a + " returned by function: %s";
}


function makeMessage(i) {
    return "This is number: " + i;
}


function makein(myval) {
    function inn() {
        console.log('Hey, this is an inner class: %s', myval);
    }

    return inn;
}


function mm(myval) {

    function getVal() {
        return myval;
    }

    function setVal(val) {
        myval = val;
    }

    function checkPoo() {
        return true;
    }

    return {
        getVal,
        setVal
    };

}


function run() {

//    console.log("HELLO WORLD!");

    const m = mm('hello');
    console.log("Result of m.getVal() = %s", m.getVal());
    m.setVal('goodbye');
    console.log("Result of m.getVal() = %s", m.getVal());

    const nf = makein('Hey, we make a function with some variables...');
    nf();

    return nf;

}



// Start entry point

function main() {

    const {
        addElement,
        element,
    } = screen;

    // Background element is automatically set to layer -100
    addElement(constants.checkeredBackground);

    // Create wilma character element,
    const wilma = element({
        name: 'Wilma',
        base: 'characters/test_character_wilma.png',
        layer: 1,
        x: 0,
        y: 0,
        alpha: 1,
    });

    // Add wilma,
    addElement(wilma);

    // Transaction animation for wilma,
    wilma.animateTo({ x: 400 }, 0.5, constants.linearTransform);

    // Print test message from other function,
    console.log(test());

    // Wait until interaction interrupts this,
    wait();

}
